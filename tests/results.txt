-----------------------------------------------------------------------------------------------------------------------------------------------------------


[1mTest [0m[1;36m1[0m
[3mFile:[0m [32mexemplos/optimization/all/[0m[1;32m1.[0m[32mlox[0m
[1mOptimizations:[0m [3;32mpropagation,  unsed_vars[0m
┌─────────────────────────────────────────────────────┐
│                     Source Code                     │
├─────────────────────────────────────────────────────┤
│  [1;36m1[0m                                                  │
│  [1;36m2[0m var x = [1;36m42[0m; [35m/[0m[35m/[0m deve ser removido após propagação │
│  [1;36m3[0m var y = [1;36m99[0m; [35m/[0m[35m/[0m removido por que não é utilizado  │
│  [1;36m4[0m x; [35m/[0m[35m/[0m propagado então deve ficar: [1;36m42.0[0m           │
└─────────────────────────────────────────────────────┘
[1;31m[[0m[1;31mFOLDING + PROPAGATION[0m[1;31m][0m[31m - AST Original:[0m
[1;35mProgram[0m[1m([0m
  [33mstmts[0m=[1m[[0m
    [1;35mVarDef[0m[1m([0m[33mname[0m=[32m'x'[0m, [33mexpr[0m=[1;35mLiteral[0m[1m([0m[33mvalue[0m=[1;36m42[0m[1;36m.0[0m[1m)[0m[1m)[0m
    [1;35mVarDef[0m[1m([0m[33mname[0m=[32m'y'[0m, [33mexpr[0m=[1;35mLiteral[0m[1m([0m[33mvalue[0m=[1;36m99[0m[1;36m.0[0m[1m)[0m[1m)[0m
    [1;35mVar[0m[1m([0m[33mname[0m=[32m'x'[0m[1m)[0m
  [1m][0m
[1m)[0m

[1;36m[[0m[1;36mFOLDING + PROPAGATION[0m[1;36m][0m[36m - AST Optimized:[0m
[1;35mProgram[0m[1m([0m
  [33mstmts[0m=[1m[[0m
    [1;35mVarDef[0m[1m([0m[33mname[0m=[32m'x'[0m, [33mexpr[0m=[1;35mLiteral[0m[1m([0m[33mvalue[0m=[1;36m42[0m[1;36m.0[0m[1m)[0m[1m)[0m
    [1;35mVarDef[0m[1m([0m[33mname[0m=[32m'y'[0m, [33mexpr[0m=[1;35mLiteral[0m[1m([0m[33mvalue[0m=[1;36m99[0m[1;36m.0[0m[1m)[0m[1m)[0m
    [1;35mLiteral[0m[1m([0m[33mvalue[0m=[1;36m42[0m[1;36m.0[0m[1m)[0m
  [1m][0m
[1m)[0m

[1;32mDescrição:[0m
[3;32mExemplo de propagação de variáveis e remoção de variáveis não utilizadas.[0m


[1;3mRunning BENCHMARKS to src code[0m

[1;31mOriginal AST Execution Time: [0m[1;31m6.198883056640625e-06[0m[1;31m seconds[0m
[1;35mOptimized AST Execution Time: [0m[1;35m2.1457672119140625e-06[0m[1;35m seconds[0m
[1;34mVariables in original AST: [0m[1;34m{[0m[1;34m'x'[0m[1;34m: [0m[1;34m42.0[0m[1;34m, [0m[1;34m'y'[0m[1;34m: [0m[1;34m99.0[0m[1;34m}[0m
[1;33mVariables in optimized AST: [0m[1;33m{[0m[1;33m'x'[0m[1;33m: [0m[1;33m42.0[0m[1;33m, [0m[1;33m'y'[0m[1;33m: [0m[1;33m99.0[0m[1;33m}[0m
[3mOptimized it was [0m[1;3;36m2.[0m[1;3;36m0x[0m[3m faster than original[0m

[1;32mBENCHMARKS completed![0m

-----------------------------------------------------------------------------------------------------------------------------------------------------------


[1mTest [0m[1;36m2[0m
[3mFile:[0m [32mexemplos/optimization/unsed_vars/[0m[1;32m1.[0m[32mlox[0m
[1mOptimizations:[0m [3;32munsed_vars[0m
┌──────────────────────────────────────────────────────────────────────────┐
│                               Source Code                                │
├──────────────────────────────────────────────────────────────────────────┤
│  [1;36m1[0m var x = [1;36m42[0m;                                                           │
│  [1;36m2[0m var y = [1;36m99[0m; [35m/[0m[35m/[0m y é uma variável não utilizada, ela deve ser removida. │
│  [1;36m3[0m x;                                                                    │
└──────────────────────────────────────────────────────────────────────────┘
[1;31m[[0m[1;31mUNSED VARS[0m[1;31m][0m[31m - AST Original:[0m
[1;35mProgram[0m[1m([0m
  [33mstmts[0m=[1m[[0m
    [1;35mVarDef[0m[1m([0m[33mname[0m=[32m'x'[0m, [33mexpr[0m=[1;35mLiteral[0m[1m([0m[33mvalue[0m=[1;36m42[0m[1;36m.0[0m[1m)[0m[1m)[0m
    [1;35mVarDef[0m[1m([0m[33mname[0m=[32m'y'[0m, [33mexpr[0m=[1;35mLiteral[0m[1m([0m[33mvalue[0m=[1;36m99[0m[1;36m.0[0m[1m)[0m[1m)[0m
    [1;35mVar[0m[1m([0m[33mname[0m=[32m'x'[0m[1m)[0m
  [1m][0m
[1m)[0m

[1;36m[[0m[1;36mUNSED VARS[0m[1;36m][0m[36m - AST Optimized:[0m
[1;35mProgram[0m[1m([0m
  [33mstmts[0m=[1m[[0m
    [1;35mVarDef[0m[1m([0m[33mname[0m=[32m'x'[0m, [33mexpr[0m=[1;35mLiteral[0m[1m([0m[33mvalue[0m=[1;36m42[0m[1;36m.0[0m[1m)[0m[1m)[0m
    [1;35mNoOp[0m[1m([0m[33mnoop[0m=[3;92mTrue[0m[1m)[0m
    [1;35mVar[0m[1m([0m[33mname[0m=[32m'x'[0m[1m)[0m
  [1m][0m
[1m)[0m

[1;32mDescrição:[0m
[3;32mVeja que y foi apagado pois ele não é utilizado após a sua definição.[0m


[1;3mRunning BENCHMARKS to src code[0m

[1;31mOriginal AST Execution Time: [0m[1;31m4.0531158447265625e-06[0m[1;31m seconds[0m
[1;35mOptimized AST Execution Time: [0m[1;35m2.1457672119140625e-06[0m[1;35m seconds[0m
[1;34mVariables in original AST: [0m[1;34m{[0m[1;34m'x'[0m[1;34m: [0m[1;34m42.0[0m[1;34m, [0m[1;34m'y'[0m[1;34m: [0m[1;34m99.0[0m[1;34m}[0m
[1;33mVariables in optimized AST: [0m[1;33m{[0m[1;33m'x'[0m[1;33m: [0m[1;33m42.0[0m[1;33m}[0m
[3mOptimized it was [0m[1;3;36m1.[0m[1;3;36m0x[0m[3m faster than original[0m

[1;32mBENCHMARKS completed![0m

-----------------------------------------------------------------------------------------------------------------------------------------------------------


[1mTest [0m[1;36m3[0m
[3mFile:[0m [32mexemplos/optimization/propagation/[0m[1;32m1.[0m[32mlox[0m
[1mOptimizations:[0m [3;32mpropagation[0m
┌────────────────────────────────────────────────────────────────────────┐
│                              Source Code                               │
├────────────────────────────────────────────────────────────────────────┤
│  [1;36m1[0m var x = [1;36m42[0m;                                                         │
│  [1;36m2[0m x; [35m/[0m[35m/[0m propaga x, ou seja, substitui o acesso a x pelo seu valor [1;36m42[0m. │
└────────────────────────────────────────────────────────────────────────┘
[1;31m[[0m[1;31mFOLDING + PROPAGATION[0m[1;31m][0m[31m - AST Original:[0m
[1;35mProgram[0m[1m([0m
  [33mstmts[0m=[1m[[0m
    [1;35mVarDef[0m[1m([0m[33mname[0m=[32m'x'[0m, [33mexpr[0m=[1;35mLiteral[0m[1m([0m[33mvalue[0m=[1;36m42[0m[1;36m.0[0m[1m)[0m[1m)[0m
    [1;35mVar[0m[1m([0m[33mname[0m=[32m'x'[0m[1m)[0m
  [1m][0m
[1m)[0m

[1;36m[[0m[1;36mFOLDING + PROPAGATION[0m[1;36m][0m[36m - AST Optimized:[0m
[1;35mProgram[0m[1m([0m
  [33mstmts[0m=[1m[[0m
    [1;35mVarDef[0m[1m([0m[33mname[0m=[32m'x'[0m, [33mexpr[0m=[1;35mLiteral[0m[1m([0m[33mvalue[0m=[1;36m42[0m[1;36m.0[0m[1m)[0m[1m)[0m
    [1;35mLiteral[0m[1m([0m[33mvalue[0m=[1;36m42[0m[1;36m.0[0m[1m)[0m
  [1m][0m
[1m)[0m

[1;32mDescrição:[0m
[3;32mVeja que o acesso de x foi substituído pelo valor [0m[1;3;32m42[0m[3;32m, pois ele é uma constante.[0m


[1;3mRunning BENCHMARKS to src code[0m

[1;31mOriginal AST Execution Time: [0m[1;31m3.814697265625e-06[0m[1;31m seconds[0m
[1;35mOptimized AST Execution Time: [0m[1;35m9.5367431640625e-07[0m[1;35m seconds[0m
[1;34mVariables in original AST: [0m[1;34m{[0m[1;34m'x'[0m[1;34m: [0m[1;34m42.0[0m[1;34m}[0m
[1;33mVariables in optimized AST: [0m[1;33m{[0m[1;33m'x'[0m[1;33m: [0m[1;33m42.0[0m[1;33m}[0m
[3mOptimized it was [0m[1;3;36m4.[0m[1;3;36m0x[0m[3m faster than original[0m

[1;32mBENCHMARKS completed![0m

-----------------------------------------------------------------------------------------------------------------------------------------------------------


[1mTest [0m[1;36m4[0m
[3mFile:[0m [32mexemplos/optimization/propagation/[0m[1;32m2.[0m[32mlox[0m
[1mOptimizations:[0m [3;32mpropagation[0m
┌─────────────────────────────────────────┐
│               Source Code               │
├─────────────────────────────────────────┤
│  [1;36m1[0m var x = [1;36m1[0m;                           │
│  [1;36m2[0m var y = [1;36m1[0m + x; [35m/[0m[35m/[0m y = [1;36m1[0m + [1;36m1[0m -> y = [1;36m2[0m │
└─────────────────────────────────────────┘
[1;31m[[0m[1;31mFOLDING + PROPAGATION[0m[1;31m][0m[31m - AST Original:[0m
[1;35mProgram[0m[1m([0m
  [33mstmts[0m=[1m[[0m
    [1;35mVarDef[0m[1m([0m[33mname[0m=[32m'x'[0m, [33mexpr[0m=[1;35mLiteral[0m[1m([0m[33mvalue[0m=[1;36m1[0m[1;36m.0[0m[1m)[0m[1m)[0m
    [1;35mVarDef[0m[1m([0m
      [33mname[0m=[32m'y'[0m
      [33mexpr[0m=[1;35mBinOp[0m[1m([0m
        [33mleft[0m=[1;35mLiteral[0m[1m([0m[33mvalue[0m=[1;36m1[0m[1;36m.0[0m[1m)[0m
        [33mright[0m=[1;35mVar[0m[1m([0m[33mname[0m=[32m'x'[0m[1m)[0m
        [33mop[0m=[35madd[0m
      [1m)[0m
    [1m)[0m,
  [1m][0m
[1m)[0m

[1;36m[[0m[1;36mFOLDING + PROPAGATION[0m[1;36m][0m[36m - AST Optimized:[0m
[1;35mProgram[0m[1m([0m
  [33mstmts[0m=[1m[[0m
    [1;35mVarDef[0m[1m([0m[33mname[0m=[32m'x'[0m, [33mexpr[0m=[1;35mLiteral[0m[1m([0m[33mvalue[0m=[1;36m1[0m[1;36m.0[0m[1m)[0m[1m)[0m
    [1;35mVarDef[0m[1m([0m[33mname[0m=[32m'y'[0m, [33mexpr[0m=[1;35mLiteral[0m[1m([0m[33mvalue[0m=[1;36m2[0m[1;36m.0[0m[1m)[0m[1m)[0m
  [1m][0m
[1m)[0m

[1;32mDescrição:[0m
[3;32mAqui aplicamos folding + propagation.[0m
[3;32mVeja que em x temos uma expressão matematica que pode ser avaliada como constante, então o valor de x é [0m[1;3;32m141[0m[3;32m.[0m
[3;32mPrimeiro ocorre a propagação de y, e depois o folding da expressão.[0m


[1;3mRunning BENCHMARKS to src code[0m

[1;31mOriginal AST Execution Time: [0m[1;31m3.814697265625e-06[0m[1;31m seconds[0m
[1;35mOptimized AST Execution Time: [0m[1;35m1.1920928955078125e-06[0m[1;35m seconds[0m
[1;34mVariables in original AST: [0m[1;34m{[0m[1;34m'x'[0m[1;34m: [0m[1;34m1.0[0m[1;34m, [0m[1;34m'y'[0m[1;34m: [0m[1;34m2.0[0m[1;34m}[0m
[1;33mVariables in optimized AST: [0m[1;33m{[0m[1;33m'x'[0m[1;33m: [0m[1;33m1.0[0m[1;33m, [0m[1;33m'y'[0m[1;33m: [0m[1;33m2.0[0m[1;33m}[0m
[3mOptimized it was [0m[1;3;36m3.[0m[1;3;36m0x[0m[3m faster than original[0m

[1;32mBENCHMARKS completed![0m

-----------------------------------------------------------------------------------------------------------------------------------------------------------


[1mTest [0m[1;36m5[0m
[3mFile:[0m [32mexemplos/optimization/propagation/[0m[1;32m3.[0m[32mlox[0m
[1mOptimizations:[0m [3;32mpropagation[0m
┌──────────────────────────────┐
│         Source Code          │
├──────────────────────────────┤
│  [1;36m1[0m var x = [1;36m5[0m;                │
│  [1;36m2[0m                           │
│  [1;36m3[0m [1m{[0m                         │
│  [1;36m4[0m   var y = x + [1;36m2[0m; [35m/[0m[35m/[0m y = [1;36m7[0m │
│  [1;36m5[0m   [1m{[0m                       │
│  [1;36m6[0m     var z = y + [1;36m2[0m; [35m/[0m[35m/[0m [1;36m9[0m   │
│  [1;36m7[0m   [1m}[0m                       │
│  [1;36m8[0m [1m}[0m                         │
│  [1;36m2[0m                           │
│ [1;36m10[0m var y = [1;36m2[0m * x; [35m/[0m[35m/[0m y = [1;36m10[0m  │
│ [1;36m11[0m var z = x + [1;36m5[0m; [35m/[0m[35m/[0m z = [1;36m10[0m  │
└──────────────────────────────┘
[1;31m[[0m[1;31mFOLDING + PROPAGATION[0m[1;31m][0m[31m - AST Original:[0m
[1;35mProgram[0m[1m([0m
  [33mstmts[0m=[1m[[0m
    [1;35mVarDef[0m[1m([0m[33mname[0m=[32m'x'[0m, [33mexpr[0m=[1;35mLiteral[0m[1m([0m[33mvalue[0m=[1;36m5[0m[1;36m.0[0m[1m)[0m[1m)[0m
    [1;35mBlock[0m[1m([0m
      [33mstatements[0m=[1m[[0m
        [1;35mVarDef[0m[1m([0m
          [33mname[0m=[32m'y'[0m
          [33mexpr[0m=[1;35mBinOp[0m[1m([0m
            [33mleft[0m=[1;35mVar[0m[1m([0m[33mname[0m=[32m'x'[0m[1m)[0m
            [33mright[0m=[1;35mLiteral[0m[1m([0m[33mvalue[0m=[1;36m2[0m[1;36m.0[0m[1m)[0m
            [33mop[0m=[35madd[0m
          [1m)[0m
        [1m)[0m,
        [1;35mBlock[0m[1m([0m
          [33mstatements[0m=[1m[[0m
            [1;35mVarDef[0m[1m([0m
              [33mname[0m=[32m'z'[0m
              [33mexpr[0m=[1;35mBinOp[0m[1m([0m
                [33mleft[0m=[1;35mVar[0m[1m([0m[33mname[0m=[32m'y'[0m[1m)[0m
                [33mright[0m=[1;35mLiteral[0m[1m([0m[33mvalue[0m=[1;36m2[0m[1;36m.0[0m[1m)[0m
                [33mop[0m=[35madd[0m
              [1m)[0m
            [1m)[0m,
          [1m][0m
        [1m)[0m,
      [1m][0m
    [1m)[0m,
    [1;35mVarDef[0m[1m([0m
      [33mname[0m=[32m'y'[0m
      [33mexpr[0m=[1;35mBinOp[0m[1m([0m
        [33mleft[0m=[1;35mLiteral[0m[1m([0m[33mvalue[0m=[1;36m2[0m[1;36m.0[0m[1m)[0m
        [33mright[0m=[1;35mVar[0m[1m([0m[33mname[0m=[32m'x'[0m[1m)[0m
        [33mop[0m=[35mmul[0m
      [1m)[0m
    [1m)[0m,
    [1;35mVarDef[0m[1m([0m
      [33mname[0m=[32m'z'[0m
      [33mexpr[0m=[1;35mBinOp[0m[1m([0m
        [33mleft[0m=[1;35mVar[0m[1m([0m[33mname[0m=[32m'x'[0m[1m)[0m
        [33mright[0m=[1;35mLiteral[0m[1m([0m[33mvalue[0m=[1;36m5[0m[1;36m.0[0m[1m)[0m
        [33mop[0m=[35madd[0m
      [1m)[0m
    [1m)[0m,
  [1m][0m
[1m)[0m

[1;36m[[0m[1;36mFOLDING + PROPAGATION[0m[1;36m][0m[36m - AST Optimized:[0m
[1;35mProgram[0m[1m([0m
  [33mstmts[0m=[1m[[0m
    [1;35mVarDef[0m[1m([0m[33mname[0m=[32m'x'[0m, [33mexpr[0m=[1;35mLiteral[0m[1m([0m[33mvalue[0m=[1;36m5[0m[1;36m.0[0m[1m)[0m[1m)[0m
    [1;35mBlock[0m[1m([0m
      [33mstatements[0m=[1m[[0m
        [1;35mVarDef[0m[1m([0m[33mname[0m=[32m'y'[0m, [33mexpr[0m=[1;35mLiteral[0m[1m([0m[33mvalue[0m=[1;36m7[0m[1;36m.0[0m[1m)[0m[1m)[0m
        [1;35mBlock[0m[1m([0m
          [33mstatements[0m=[1m[[0m
            [1;35mVarDef[0m[1m([0m[33mname[0m=[32m'z'[0m, [33mexpr[0m=[1;35mLiteral[0m[1m([0m[33mvalue[0m=[1;36m9[0m[1;36m.0[0m[1m)[0m[1m)[0m
          [1m][0m
        [1m)[0m,
      [1m][0m
    [1m)[0m,
    [1;35mVarDef[0m[1m([0m[33mname[0m=[32m'y'[0m, [33mexpr[0m=[1;35mLiteral[0m[1m([0m[33mvalue[0m=[1;36m10[0m[1;36m.0[0m[1m)[0m[1m)[0m
    [1;35mVarDef[0m[1m([0m[33mname[0m=[32m'z'[0m, [33mexpr[0m=[1;35mLiteral[0m[1m([0m[33mvalue[0m=[1;36m10[0m[1;36m.0[0m[1m)[0m[1m)[0m
  [1m][0m
[1m)[0m

[1;32mDescrição:[0m
[3;32mTesta a propagação de variáveis em escopos aninhados[0m


[1;3mRunning BENCHMARKS to src code[0m

[1;31mOriginal AST Execution Time: [0m[1;31m7.867813110351562e-06[0m[1;31m seconds[0m
[1;35mOptimized AST Execution Time: [0m[1;35m1.9073486328125e-06[0m[1;35m seconds[0m
[1;34mVariables in original AST: [0m[1;34m{[0m[1;34m'x'[0m[1;34m: [0m[1;34m5.0[0m[1;34m, [0m[1;34m'y'[0m[1;34m: [0m[1;34m10.0[0m[1;34m, [0m[1;34m'z'[0m[1;34m: [0m[1;34m10.0[0m[1;34m}[0m
[1;33mVariables in optimized AST: [0m[1;33m{[0m[1;33m'x'[0m[1;33m: [0m[1;33m5.0[0m[1;33m, [0m[1;33m'y'[0m[1;33m: [0m[1;33m10.0[0m[1;33m, [0m[1;33m'z'[0m[1;33m: [0m[1;33m10.0[0m[1;33m}[0m
[3mOptimized it was [0m[1;3;36m4.[0m[1;3;36m0x[0m[3m faster than original[0m

[1;32mBENCHMARKS completed![0m

